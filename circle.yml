version: 2
jobs:
  build:
    docker:
    - image: ubuntu:18.04
    environment:
      SOURCE_MAP_SUPPORT: true
      GO111MODULE: "on"
    working_directory: ~/gopherjs
    steps:
    - run: apt-get update && apt-get install -y sudo curl git python make g++
    - checkout
    - run: git clone https://github.com/creationix/nvm $HOME/.nvm && cd $HOME/.nvm && git checkout v0.33.9 && echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV && echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
    - run: nvm install 10.0.0 && nvm alias default 10.0.0
    - run: echo export "NODE_PATH='$(npm root --global)'" >> $BASH_ENV # Make nodejs able to require globally installed modules from any working path.
    - run: env
    - run: cd /usr/local && sudo rm -rf go && curl https://storage.googleapis.com/golang/go1.16.5.linux-amd64.tar.gz | sudo tar -xz
    - run: echo 'export PATH="$PATH:/usr/local/go/bin:$HOME/go/bin"' >> $BASH_ENV
    - run: go get -t -d -v ./...
    - run: go install -v
    - run: npm install # Install our (dev) dependencies from package.json.
    - run: npm install --global source-map-support # Required by standard library tests.
    - run: npm install --global node-gyp@5.1.1
    - run: cd node-syscall && node-gyp rebuild && mkdir -p $NODE_PATH && cp build/Release/syscall.node $NODE_PATH/syscall.node
    - run: go generate github.com/gopherjs/gopherjs/compiler/prelude
    - run: diff -u <(echo -n) <(git status --porcelain)
    - run: diff -u <(echo -n) <(gofmt -d .)
    - run: go vet . # Go package in root directory.
    - run: for d in */; do echo ./$d...; done | grep -v ./doc | grep -v ./tests | grep -v ./node | xargs go vet # All subdirectories except "doc", "tests", "node*".
    - run: diff -u <(echo -n) <(go list ./compiler/natives/src/...) # All those packages should have // +build js.
    - run: gopherjs install -v net/http # Should build successfully (can't run tests, since only client is supported).
    - run: ulimit -s 10000 && gopherjs test --minify -v --short github.com/gopherjs/gopherjs/js/... github.com/gopherjs/gopherjs/tests/... $(go list std | grep -v -x -f .std_test_pkg_exclusions)
    - run: go test -v -race ./...
    - run: gopherjs test -v fmt # No minification should work.
    - run:
        name: TodoMVC in GOPATH mode
        command: |
          export GO111MODULE=off
          export GOPATH=/tmp/gopath
          mkdir -p $GOPATH/src
          go get -v github.com/gopherjs/todomvc
          gopherjs build -v -o /tmp/todomvc_gopath.js github.com/gopherjs/todomvc
          gopherjs test -v github.com/gopherjs/todomvc/...
          find $GOPATH
    - run:
        name: TodoMVC in Go Modules mode
        command: |
          export GO111MODULE=on
          export GOPATH=/tmp/gomod
          mkdir -p $GOPATH/src
          cd /tmp
          git clone --depth=1 https://github.com/gopherjs/todomvc.git
          cd /tmp/todomvc
          gopherjs build -v -o /tmp/todomvc_gomod.js github.com/gopherjs/todomvc
          gopherjs test -v github.com/gopherjs/todomvc/...
          find $GOPATH
    - run:
        name: Compare GOPATH and Go Modules output
        command: diff -u <(sed 's/todomvc_gomod.js.map/todomvc_ignored.js.map/' /tmp/todomvc_gomod.js) <(sed 's/todomvc_gopath.js.map/todomvc_ignored.js.map/' /tmp/todomvc_gopath.js)
